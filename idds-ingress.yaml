apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: idds-dev-rest1
  labels:
    helm.sh/chart: rest-0.1.0
    app.kubernetes.io/name: rest
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/auth-proxy-set-headers: X-IDDS-Auth-Type,X-IDDS-Auth-VO,X-IDDS-Auth-Token,X-IDDS-SSL-CERT,X-IDDS-SSL-CLIENT-S-DN,X-IDDS-SSL-CLIENT-S-DN-CN
    # nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    # nginx.ingress.kubernetes.io/auth-tls-secret: default/ca-secret-wguan
    # nginx.ingress.kubernetes.io/auth-tls-verify-client: "off"
    # nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional_no_ca"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "10"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      proxy_set_header X-IDDS-Auth-Type $http_x_idds_auth_type;
      proxy_set_header X-IDDS-Auth-VO $http_x_idds_auth_vo;
      proxy_set_header X-IDDS-Auth-Token $http_x_idds_auth_token;
      proxy_set_header X-IDDS-Auth-Username-Original $http_x_idds_auth_username_original;
      proxy_set_header X-IDDS-Auth-Usercert-Original $http_x_idds_auth_usercert_original;
      proxy_set_header X-IDDS-Auth-Userdn-Original $http_x_idds_auth_userdn_original;
      
      proxy_set_header SSL-CLIENT-CERT $ssl_client_escaped_cert;
      proxy_set_header SSL-CLIENT-S-DN  $ssl_client_s_dn;

    nginx.ingress.kubernetes.io/server-snippet: |
        ssl_verify_client optional_no_ca;
        # ssl_verify_client optional;
        ssl_verify_depth 11;
        ssl on;
        # ssl_conf_command Options UnsafeLegacyRenegotiation;
        # ssl_allow_proxy on;
        # ssl_conf_command VerifyMode RequirePostHandshake;
        # ssl_conf_command VerifyMode RequestPostHandshake;

        # ssl_protocols TLSv1.1 TLSv1.2;
    #nginx.ingress.kubernetes.io/proxy-pass-headers: X-IDDS-Auth-Type,X-IDDS-Auth-VO,X-IDDS-Auth-Token,X-IDDS-SSL-CERT,X-IDDS-SSL-CLIENT-S-DN,X-IDDS-SSL-CLIENT-S-DN-CN
    nginx.ingress.kubernetes.io/secure-backends: "true"
    # nginx.ingress.kubernetes.io/server-snippet: |
      #ssl on;
      #ssl_protocols TLSv1.1 TLSv1.2;
      # ssl_trusted_certificate /etc/ingress-controller/ssl/ca-default-ca-secret-bundle.pem;
      # ssl_ciphers HIGH:!aNULL:!MD5;
      # ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.org/proxy-pass-headers: X-IDDS-Auth-Type,X-IDDS-Auth-VO,X-IDDS-Auth-Token,X-IDDS-SSL-CERT,X-IDDS-SSL-CLIENT-S-DN,X-IDDS-SSL-CLIENT-S-DN-CN
spec:
  tls:
    - hosts:
        - "idds-dev-rest1.cern.ch"
      secretName: idds-dev-main-tls-cert
  rules:
    - host: "idds-dev-rest1.cern.ch"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: idds-dev-rest
                port:
                  number: 8443
