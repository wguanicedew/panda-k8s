# Default values for main.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: indigoiam/iam-login-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # tag: "latest"
  tag: "v1.6.0"

# start the service when pod gets started
autoStart: true

persistentvolume:
  path: "/mnt/iam-logs"
  size: 5Gi
hostcerts:
  enabled: false

iam:
  # profiles: "prod,google,saml"
  profiles: "prod"
  organization: 'Rubin'
  cilogon_client_id: ""
  cilogon_client_secret: ""
  registration_oidc_issuer: "https://cilogon.org"
  base_url: "https://panda-iam-dev.cern.ch"
  issuer: "https://panda-iam-dev.cern.ch"

database:
  name: db_name
  user: db_user
  password: db_password

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  httpsPort: 443

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /$2

    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "on"
    nginx.ingress.kubernetes.io/server-snippet: |
        ssl on;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers               ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS;

    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'off'
    nginx.ingress.kubernetes.io/auth-tls-secret: "default/ca-secret"
    nginx.ingress.kubernetes.io/configuration-snippet: |-
          # proxy_set_header Host $host;
          # proxy_set_header X-Real-IP $remote_addr;
          # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          # proxy_set_header X-Forwarded-Proto $scheme;
          # proxy_set_header X-Real-IP       $remote_addr;
          # proxy_pass              http://panda-iam-doma-main.cern.ch:8080;
          proxy_set_header        X-SSL-Client-Cert $ssl_client_cert;
          proxy_set_header        X-SSL-Client-I-Dn $ssl_client_i_dn;
          proxy_set_header        X-SSL-Client-S-Dn $ssl_client_s_dn;
          proxy_set_header        X-SSL-Client-Serial $ssl_client_serial;
          proxy_set_header        X-SSL-Client-V-Start $ssl_client_v_start;
          proxy_set_header        X-SSL-Client-V-End   $ssl_client_v_end;
          proxy_set_header        X-SSL-Client-Verify  $ssl_client_verify;
          proxy_set_header        X-SSL-Protocol $ssl_protocol;
          proxy_set_header        X-SSL-Server-Name $ssl_server_name;
          # proxy_redirect http://panda-iam-dev.cern.ch https://panda-iam-dev.cern.ch;

    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - domain: cern.ch
      hostOverride: ""
      paths:
        - path: /
          pathType: Prefix

  tls:
    - secretName: ""
      hosts:
        - domain: cern.ch
          hostOverride: ""
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
