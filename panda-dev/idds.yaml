---
# Source: idds/charts/main/templates/configmap.yaml
# iDDS configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: idds-dev-main-configmap
data:
  idds_configmap.json: |-
    {"/opt/idds/config/idds/idds.cfg":
        {"common":
            {"loglevel": "DEBUG"},
         "database":
            {"default": "postgresql://idds:MyPass123@idds-dev-postgres/idds_db",
             "schema": "doma_idds",
             "pool_size": 20,
             "pool_recycle": 3600,
             "echo": 0,
             "pool_reset_on_return": "rollback"
            },
         "conductor":
            {"threshold_to_release_messages": 1000,
             "random_delay": 60,
              "plugin.notifier": "idds.agents.conductor.plugins.messaging.MessagingSender",
              "plugin.notifier.brokers": "atlas-mb.cern.ch",
              "plugin.notifier.port": 61013,
              "plugin.notifier.destination": "/topic/doma.idds",
              "plugin.notifier.username": "username",
              "plugin.notifier.password": "password",
              "plugin.notifier.broker_timeout": 10
            }
        },
    "/opt/idds/config/idds/auth.cfg":
        {"common":
            {"allow_vos": "atlas,panda_dev,Rubin,Rubin:production"
        },
         "atlas":
            {"client_secret": "abc",
             "audience": "https://pandaserver-doma.cern.ch",
             "client_id": "abc",
             "oidc_config_url": "https://panda-iam-doma.cern.ch/.well-known/openid-configuration",
             "vo": "atlas"
            },
         "Rubin":
            {"client_secret": "abc",
             "audience": "https://pandaserver-doma.cern.ch",
             "client_id": "abc",
             "oidc_config_url": "https://panda-iam-doma.cern.ch/.well-known/openid-configuration",
             "vo": "Rubin"
            },
         "Rubin:production":
            {"client_secret": "abc",
             "audience": "https://pandaserver-doma.cern.ch",
             "client_id": "abc",
             "oidc_config_url": "https://panda-iam-doma.cern.ch/.well-known/openid-configuration",
             "vo": "Rubin:production"
            },
          "panda_dev":
            {"client_secret": "abc",
             "audience": "https://pandaserver-doma.cern.ch",
             "client_id": "abc",
             "oidc_config_url": "https://panda-iam-doma.cern.ch/.well-known/openid-configuration",
             "vo": "panda_dev"
            }
        },
    "/opt/idds/config/panda.cfg":
        {"panda":
            {"panda_url_ssl": "https://pandaserver-doma.cern.ch:25443/server/panda",
             "panda_url": "http://pandaserver-doma.cern.ch:25080/server/panda",
             "panda_monitor_url": "https://panda-doma.cern.ch",
             "# PANDA_AUTH_VO": "panda_dev",
             "panda_auth": "oidc",
             "panda_auth_vo": "Rubin:production",
             "panda_config_root": "/opt/idds/config/"
        }
        },
    "/opt/idds/config/rucio.cfg":
        {"client":
            {"rucio_host": "https://voatlasrucio-server-prod.cern.ch:443",
             "auth_host": "https://voatlasrucio-auth-prod.cern.ch:443",
             "ca_cert": "$RUCIO_HOME/etc/ca.crt",
             "client_cert": "~/.globus/usercert.pem",
             "client_key": "~/.globus/userkey.pem",
             "client_x509_proxy": "$X509_USER_PROXY",
             "auth_type": "x509_proxy",
             "request_retries": 3
        }
        },
    "main/config/idds.cfg":
        {"testsection":
            {"testkey": "testvalue"}
        }
    }

  idds2panda_token: |-
        

  idds_configmap_back.json: |-
        {"/opt/idds/config/idds/idds.cfg":
            {"common": {"loglevel": "DEBUG"},
             "database":
                {"default": "postgresql://idds:idds@localhost/idds",
                 "schema": "DOMA_IDDS",
        	 "pool_size": 20,
                 "pool_recycle": 3600,
                 "echo": 0,
                 "pool_reset_on_return": "rollback"
        	},
             "conductor":
                {"threshold_to_release_messages": 1000,
                 "random_delay": 60,
                  "plugin.notifier": "idds.agents.conductor.plugins.messaging.MessagingSender",
                  "plugin.notifier.brokers": "atlas-test-mb.cern.ch",
                  "plugin.notifier.port": 61013,
                  "plugin.notifier.destination": "/queue/atlas.idds",
                  "plugin.notifier.username": "user",
                  "plugin.notifier.password": "password",
                  "plugin.notifier.broker_timeout": 10
        	}
            },
        "/opt/idds/config/idds/auth.cfg":
            {"common":
                {"allow_vos": "atlas,panda_dev,Rubin,Rubin:production"
        	},
             "atlas":
                {"client_secret": "",
                 "audience": "https://pandaserver-doma.cern.ch",
                 "client_id": "",
                 "oidc_config_url": "https://panda-iam-doma.cern.ch/.well-known/openid-configuration",
                 "vo": "atlas"
                },
             "Rubin":
                {"client_secret": "",
                 "audience": "https://pandaserver-doma.cern.ch",
                 "client_id": "",
                 "oidc_config_url": "https://panda-iam-doma.cern.ch/.well-known/openid-configuration",
                 "vo": "Rubin"
                }
            },
        "/opt/idds/config/panda.cfg":
            {"panda":
                {"panda_url_ssl": "https://pandaserver-doma.cern.ch:25443/server/panda",
                 "panda_url": "http://pandaserver-doma.cern.ch:25080/server/panda",
                 "panda_monitor_url": "https://panda-doma.cern.ch",
                 "# PANDA_AUTH_VO": "panda_dev",
                 "panda_auth": "oidc",
                 "panda_auth_vo": "Rubin/production",
                 "panda_config_root": "/opt/idds/config/.panda/"
        	}
            },
        "/opt/idds/config/rucio.cfg":
            {"client":
                {"rucio_host": "https://voatlasrucio-server-prod.cern.ch:443",
                 "auth_host": "https://voatlasrucio-auth-prod.cern.ch:443",
                 "ca_cert": "$RUCIO_HOME/etc/ca.crt",
                 "client_cert": "~/.globus/usercert.pem",
                 "client_key": "~/.globus/userkey.pem",
                 "client_x509_proxy": "$X509_USER_PROXY",
                 "auth_type": "x509_proxy",
                 "request_retries": 3
        	}
            },
        "main/config/idds.cfg":
            {"testsection":
                {"testkey": "testvalue"}
            }
        }
---
# Source: idds/charts/main/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: idds-dev-main-envs
data:
  IDDS_SERVER: idds-dev-main.cern.ch
---
# Source: idds/charts/postgres/templates/configmap.yaml
# config map
apiVersion: v1
kind: ConfigMap
metadata:
  name: idds-dev-postgres-configmap
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  POSTGRES_DB: idds_db
  POSTGRES_USER: idds
  POSTGRES_PASSWORD: MyPass123
  POSTGRES_SCHEMA: doma_idds
---
# Source: idds/charts/main/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: idds-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: idds-dev
---
# Source: idds/charts/postgres/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: idds-dev-postgres
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgres-port
      protocol: TCP
      name: postgres-port
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: idds-dev
---
# Source: idds/charts/main/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idds-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: main
      app.kubernetes.io/instance: idds-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: main
        app.kubernetes.io/instance: idds-dev
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: main
          securityContext:
            {}
          image: "wguanicedew/idds:0.10.23.2"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - sleep 30;
              start-daemon.sh rest
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          envFrom:
            - configMapRef:
                name: idds-dev-main-envs
          resources:
            {}
          volumeMounts:
              # - name: idds-dev-main-logs
              #  mountPath: /var/log/idds/
              - name: idds-dev-main-configmap
                mountPath: /opt/idds/configmap
      volumes:
        - name: idds-dev-main-logs
          persistentVolumeClaim:
            claimName: idds-dev-main
        - name: idds-dev-main-configmap
          configMap:
              name: idds-dev-main-configmap
---
# Source: idds/charts/main/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idds-dev-main-daemon
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main-daemon
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: main-daemon
      app.kubernetes.io/instance: idds-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: main-daemon
        app.kubernetes.io/instance: idds-dev
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: main
          securityContext:
            {}
          image: "wguanicedew/idds:0.10.23.2"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - sleep 30;
              start-daemon.sh daemon
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          resources:
            {}
          volumeMounts:
              - name: idds-dev-main-configmap
                mountPath: /opt/idds/configmap
      volumes:
        - name: idds-dev-main-configmap
          configMap:
              name: idds-dev-main-configmap
---
# Source: idds/charts/postgres/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idds-dev-postgres
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: idds-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: idds-dev
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: postgres
          securityContext:
            {}
          image: "postgres:13.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgres-port
              containerPort: 5432
              protocol: TCP
          envFrom:
            - configMapRef:
                name: idds-dev-postgres-configmap
          resources:
            {}
          volumeMounts:
      volumes:
---
# Source: idds/charts/main/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: idds-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: idds-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-proxy-set-headers: X-IDDS-Auth-Type,X-IDDS-Auth-VO,X-IDDS-Auth-Token
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "10"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      proxy_set_header X-IDDS-Auth-Type $http_x_idds_auth_type;
      proxy_set_header X-IDDS-Auth-VO $http_x_idds_auth_vo;
      proxy_set_header X-IDDS-Auth-Token $http_x_idds_auth_token;
      add_header X-IDDS-Auth-Type $http_x_idds_auth_type;
      add_header X-IDDS-Auth-VO $http_x_idds_auth_vo;
      add_header X-IDDS-Auth-Token $http_x_idds_auth_token;
    nginx.ingress.kubernetes.io/proxy-pass-headers: X-IDDS-Auth-Type,X-IDDS-Auth-VO,X-IDDS-Auth-Token
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      ssl on;
      ssl_protocols TLSv1.2 TLSv1.3;
      # ssl_ciphers HIGH:!aNULL:!MD5;
      ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.org/proxy-pass-headers: X-IDDS-Auth-Type,X-IDDS-Auth-VO,X-IDDS-Auth-Token
spec:
  tls:
    - hosts:
        - "idds-dev-main.slac.stanford.edu"
      secretName: idds-dev-main-tlssan-cert
  rules:
    - host: "idds-dev-main.slac.stanford.edu"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: idds-dev-main
                port:
                  number: 443
