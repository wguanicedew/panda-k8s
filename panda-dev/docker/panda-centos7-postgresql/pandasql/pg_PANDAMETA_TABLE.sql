-- Generated by Ora2Pg, the Oracle database Schema converter, version 21.1
-- Copyright 2000-2020 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:INT8R

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

SET check_function_bodies = false;

CREATE SCHEMA IF NOT EXISTS doma_pandameta;
ALTER SCHEMA doma_pandameta OWNER TO panda;

SET search_path = doma_pandameta,public;

CREATE TABLE agis_dump (
	panda_site varchar(52),
	update_time timestamp,
	json_data text
) ;
ALTER TABLE agis_dump OWNER TO panda;

CREATE TABLE auth_group (
	id bigint,
	name varchar(80)
) ;
ALTER TABLE auth_group OWNER TO panda;

CREATE TABLE auth_group_permissions (
	id bigint,
	group_id bigint,
	permission_id bigint
) ;
ALTER TABLE auth_group_permissions OWNER TO panda;

CREATE TABLE auth_user_groups (
	id bigint,
	user_id bigint,
	group_id bigint
) ;
ALTER TABLE auth_user_groups OWNER TO panda;

CREATE TABLE auth_user_user_permissions (
	id bigint,
	user_id bigint,
	permission_id bigint
) ;
ALTER TABLE auth_user_user_permissions OWNER TO panda;

CREATE TABLE cache_old (
	type varchar(250) NOT NULL,
	value varchar(250) NOT NULL,
	qurl varchar(250) NOT NULL,
	modtime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	usetime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	updmin integer,
	data text
) ;
ALTER TABLE cache_old OWNER TO panda;
ALTER TABLE cache_old ADD PRIMARY KEY (type,value);

CREATE TABLE cache_old_2 (
	type varchar(250) NOT NULL,
	value varchar(250) NOT NULL,
	qurl varchar(250) NOT NULL,
	modtime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	usetime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	updmin integer,
	data text
) ;
ALTER TABLE cache_old_2 OWNER TO panda;
ALTER TABLE cache_old_2 ADD PRIMARY KEY (type,value);

CREATE TABLE cache_track_new (
	track_time timestamp DEFAULT CURRENT_TIMESTAMP,
	type varchar(250),
	value varchar(250),
	lob_len_old bigint,
	lob_len_new bigint,
	userhost varchar(250)
) ;
ALTER TABLE cache_track_new OWNER TO panda;

CREATE TABLE certificates (
	id integer NOT NULL,
	cert varchar(4000) NOT NULL
) ;
ALTER TABLE certificates OWNER TO panda;
ALTER TABLE certificates ADD PRIMARY KEY (id);

CREATE TABLE classlist (
	class varchar(30) NOT NULL,
	name varchar(60) NOT NULL,
	rights varchar(30) NOT NULL,
	priority integer,
	quota1 bigint,
	quota7 bigint,
	quota30 bigint
) ;
ALTER TABLE classlist OWNER TO panda;
ALTER TABLE classlist ADD PRIMARY KEY (class,name);

CREATE TABLE cloudconfig (
	name varchar(20) NOT NULL,
	description varchar(50) NOT NULL,
	tier1 varchar(20) NOT NULL,
	tier1se varchar(400) NOT NULL,
	relocation varchar(10),
	weight bigint NOT NULL DEFAULT '0',
	server varchar(100) NOT NULL,
	status varchar(20) NOT NULL,
	transtimelo bigint NOT NULL DEFAULT '0',
	transtimehi bigint NOT NULL DEFAULT '0',
	waittime bigint NOT NULL DEFAULT '0',
	comment_ varchar(200),
	space bigint NOT NULL DEFAULT '0',
	moduser varchar(30),
	modtime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	validation varchar(20),
	mcshare bigint NOT NULL DEFAULT '0',
	countries varchar(80),
	fasttrack varchar(20),
	nprestage bigint NOT NULL DEFAULT 0,
	pilotowners varchar(300),
	dn varchar(100),
	email varchar(60),
	fairshare varchar(256),
	auto_mcu smallint DEFAULT 0
) ;
COMMENT ON COLUMN cloudconfig.comment_ IS E'ORIGINAL NAME:comment';
ALTER TABLE cloudconfig OWNER TO panda;
ALTER TABLE cloudconfig ADD PRIMARY KEY (name);
ALTER TABLE cloudconfig ADD CONSTRAINT cloudconfig_auto_mcu_nn CHECK ((auto_mcu IS NOT NULL AND auto_mcu::text <> ''));
ALTER TABLE cloudconfig ADD CONSTRAINT cloudconfig_auto_mcu_check CHECK (auto_mcu IN (0,1));

CREATE TABLE cloudspace (
	cloud varchar(20) NOT NULL,
	store varchar(50) NOT NULL,
	space bigint NOT NULL DEFAULT '0',
	freespace bigint NOT NULL DEFAULT '0',
	moduser varchar(30) NOT NULL,
	modtime timestamp NOT NULL DEFAULT LOCALTIMESTAMP
) ;
ALTER TABLE cloudspace OWNER TO panda;
ALTER TABLE cloudspace ADD PRIMARY KEY (cloud,store);

CREATE TABLE deft_stepex (
	req2step_id bigint,
	reqid bigint,
	step_id bigint,
	status varchar(16),
	priority integer,
	def_time timestamp,
	appr_time timestamp,
	exe_time timestamp,
	done_time timestamp,
	input_events integer,
	output_events integer
) ;
ALTER TABLE deft_stepex OWNER TO panda;

CREATE TABLE dslist (
	id integer NOT NULL,
	duid varchar(40),
	name varchar(200) NOT NULL,
	ugid integer,
	priority integer,
	status varchar(10),
	lastuse timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	pinstate varchar(10),
	pintime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	lifetime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	site varchar(60),
	par1 varchar(30),
	par2 varchar(30),
	par3 varchar(30),
	par4 varchar(30),
	par5 varchar(30),
	par6 varchar(30)
) ;
ALTER TABLE dslist OWNER TO panda;
CREATE INDEX dslist_duid_idx ON dslist (duid, site);
CREATE INDEX dslist_name_idx ON dslist (name, site);
ALTER TABLE dslist ADD PRIMARY KEY (id);

CREATE TABLE groups (
	id integer NOT NULL,
	name varchar(60) NOT NULL,
	description varchar(120) NOT NULL,
	url varchar(100),
	classa varchar(30),
	classp varchar(30),
	classxp varchar(30),
	njobs1 bigint,
	njobs7 bigint,
	njobs30 bigint,
	cpua1 bigint,
	cpua7 bigint,
	cpua30 bigint,
	cpup1 bigint,
	cpup7 bigint,
	cpup30 bigint,
	cpuxp1 bigint,
	cpuxp7 bigint,
	cpuxp30 bigint,
	allcpua1 bigint,
	allcpua7 bigint,
	allcpua30 bigint,
	allcpup1 bigint,
	allcpup7 bigint,
	allcpup30 bigint,
	allcpuxp1 bigint,
	allcpuxp7 bigint,
	allcpuxp30 bigint,
	quotaa1 bigint,
	quotaa7 bigint,
	quotaa30 bigint,
	quotap1 bigint,
	quotap7 bigint,
	quotap30 bigint,
	quotaxp1 bigint,
	quotaxp7 bigint,
	quotaxp30 bigint,
	allquotaa1 bigint,
	allquotaa7 bigint,
	allquotaa30 bigint,
	allquotap1 bigint,
	allquotap7 bigint,
	allquotap30 bigint,
	allquotaxp1 bigint,
	allquotaxp7 bigint,
	allquotaxp30 bigint,
	space1 bigint,
	space7 bigint,
	space30 bigint
) ;
ALTER TABLE groups OWNER TO panda;
CREATE UNIQUE INDEX groups_name_idx ON groups (name);
ALTER TABLE groups ADD PRIMARY KEY (id);

CREATE TABLE harvester_dialogs (
	harvester_id varchar(50),
	diagid bigint,
	modulename varchar(100),
	identifier varchar(100),
	creationtime timestamp,
	messagelevel varchar(10),
	diagmessage varchar(500)
) PARTITION BY RANGE (creationtime) ;
COMMENT ON TABLE harvester_dialogs IS E'Table for publishing diagnostic information of harvester instances in PandaMon';
COMMENT ON COLUMN harvester_dialogs.creationtime IS E'Timestamp when the message is sent';
COMMENT ON COLUMN harvester_dialogs.diagid IS E'Serial number of the message';
COMMENT ON COLUMN harvester_dialogs.diagmessage IS E'Dialog message';
COMMENT ON COLUMN harvester_dialogs.harvester_id IS E'Identifier of the harvester instance';
COMMENT ON COLUMN harvester_dialogs.identifier IS E'Identifier of the message if any';
COMMENT ON COLUMN harvester_dialogs.messagelevel IS E'Message level';
COMMENT ON COLUMN harvester_dialogs.modulename IS E'The module name which sent the message';
ALTER TABLE harvester_dialogs OWNER TO panda;

CREATE TABLE harvester_rel_jobs_workers (
	harvesterid varchar(50),
	workerid bigint,
	pandaid bigint,
	lastupdate timestamp
) PARTITION BY RANGE (pandaid) ;
COMMENT ON TABLE harvester_rel_jobs_workers IS E'The table for relationship between jobs and workers. Combination of INSTANCEID, WORKERID, and PANDAID is unique. Deletion policy is to delete all records with LASTUPDATE<NOW-N_days';
COMMENT ON COLUMN harvester_rel_jobs_workers.harvesterid IS E'Identifier of the harvester instance';
COMMENT ON COLUMN harvester_rel_jobs_workers.lastupdate IS E'Set when the record is updated';
COMMENT ON COLUMN harvester_rel_jobs_workers.pandaid IS E'Job ID in PanDA';
COMMENT ON COLUMN harvester_rel_jobs_workers.workerid IS E'Identifier of the worker';
ALTER TABLE harvester_rel_jobs_workers OWNER TO panda;

CREATE TABLE harvester_workers (
	harvesterid varchar(50),
	workerid bigint,
	lastupdate timestamp,
	status varchar(80),
	batchid varchar(80),
	nodeid varchar(80),
	queuename varchar(80),
	computingsite varchar(128),
	submittime timestamp,
	starttime timestamp,
	endtime timestamp,
	ncore integer,
	errorcode integer,
	stdout varchar(250),
	stderr varchar(250),
	batchlog varchar(250),
	resourcetype varchar(56),
	nativeexitcode integer,
	nativestatus varchar(80),
	diagmessage varchar(500),
	computingelement varchar(128),
	njobs integer,
	submissionhost varchar(128),
	harvesterhost varchar(128),
	jdl varchar(250)
) PARTITION BY RANGE (lastupdate) ;
COMMENT ON TABLE harvester_workers IS E'for workers submitted by harvesters. Combination of INSTANCEID and WORKERID is unique. Deletion policy is to delete all records with LASTUPDATE<NOW-N_days. To be enforced a data sliding window by partition removal although the PK has a global index (The ALTER TABLE ... DROP PARTITION ... UPDATE GLOBAL INDEXES)  to be used. ';
COMMENT ON COLUMN harvester_workers.batchid IS E'Unique ID in the batch system';
COMMENT ON COLUMN harvester_workers.batchlog IS E'URL for batch log';
COMMENT ON COLUMN harvester_workers.computingelement IS E'Gateway of the batch system';
COMMENT ON COLUMN harvester_workers.computingsite IS E'Panda Queue name';
COMMENT ON COLUMN harvester_workers.diagmessage IS E'Error diagnostics';
COMMENT ON COLUMN harvester_workers.endtime IS E'Set when the worker is terminated';
COMMENT ON COLUMN harvester_workers.errorcode IS E'Error code in any';
COMMENT ON COLUMN harvester_workers.harvesterid IS E'Identifier of the harvester instance';
COMMENT ON COLUMN harvester_workers.lastupdate IS E'Set when the record is updated';
COMMENT ON COLUMN harvester_workers.nativeexitcode IS E'Exit code in the underlying system';
COMMENT ON COLUMN harvester_workers.nativestatus IS E'Status in the underlying system';
COMMENT ON COLUMN harvester_workers.ncore IS E'The number of cores the worker use';
COMMENT ON COLUMN harvester_workers.njobs IS E'The number of associated jobs';
COMMENT ON COLUMN harvester_workers.nodeid IS E'Identifier of the node, such as hostname, IP, etc';
COMMENT ON COLUMN harvester_workers.queuename IS E'Name of the batch queue';
COMMENT ON COLUMN harvester_workers.resourcetype IS E'Resource type';
COMMENT ON COLUMN harvester_workers.starttime IS E'Set when the worker gets CPUs';
COMMENT ON COLUMN harvester_workers.status IS E'Worker status';
COMMENT ON COLUMN harvester_workers.stderr IS E'URL for stderr';
COMMENT ON COLUMN harvester_workers.stdout IS E'URL for stdout';
COMMENT ON COLUMN harvester_workers.submissionhost IS E'The host name of the submission node';
COMMENT ON COLUMN harvester_workers.submittime IS E'Set when the worker is submitted';
COMMENT ON COLUMN harvester_workers.workerid IS E'Identifier of the worker';
ALTER TABLE harvester_workers OWNER TO panda;

CREATE TABLE history (
	id integer NOT NULL,
	entrytime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	starttime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	endtime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	cpu bigint,
	cpuxp bigint,
	space integer
) ;
ALTER TABLE history OWNER TO panda;
ALTER TABLE history ADD PRIMARY KEY (id);

CREATE TABLE incidents (
	at_time timestamp,
	typekey varchar(20),
	description varchar(200)
) ;
ALTER TABLE incidents OWNER TO panda;

CREATE TABLE installedsw (
	siteid varchar(60),
	cloud varchar(10),
	release varchar(10),
	cache varchar(40),
	validation varchar(10),
	cmtconfig varchar(40)
) ;
ALTER TABLE installedsw OWNER TO panda;
CREATE INDEX installedsw_relid_site_indx ON installedsw (release, siteid);
ALTER TABLE installedsw ADD UNIQUE (siteid,release,cache,cmtconfig);

CREATE TABLE jdllist (
	name varchar(60) NOT NULL,
	host varchar(60),
	system varchar(20) NOT NULL,
	jdl varchar(4000)
) ;
ALTER TABLE jdllist OWNER TO panda;
ALTER TABLE jdllist ADD PRIMARY KEY (name);

CREATE TABLE jedi_job_retry_history (
	jeditaskid bigint,
	oldpandaid bigint,
	newpandaid bigint,
	ins_utc_tstamp timestamp DEFAULT ((CURRENT_TIMESTAMP(0) AT TIME ZONE 'UTC')),
	relationtype varchar(16),
	originpandaid bigint
) PARTITION BY RANGE (ins_utc_tstamp) ;
ALTER TABLE jedi_job_retry_history OWNER TO panda;

CREATE TABLE jobclass (
	id integer NOT NULL,
	name varchar(30) NOT NULL,
	description varchar(30) NOT NULL,
	rights varchar(30),
	priority integer,
	quota1 bigint,
	quota7 bigint,
	quota30 bigint
) ;
ALTER TABLE jobclass OWNER TO panda;
CREATE UNIQUE INDEX jobclass_name_idx ON jobclass (name);
ALTER TABLE jobclass ADD PRIMARY KEY (id);

CREATE TABLE logstable (
	pandaid bigint NOT NULL DEFAULT '0',
	log1 text NOT NULL,
	log2 text NOT NULL,
	log3 text NOT NULL,
	log4 text NOT NULL
) ;
ALTER TABLE logstable OWNER TO panda;
ALTER TABLE logstable ADD PRIMARY KEY (pandaid);

CREATE TABLE members (
	uname varchar(30) NOT NULL,
	gname varchar(30) NOT NULL,
	rights varchar(30),
	since timestamp NOT NULL DEFAULT LOCALTIMESTAMP
) ;
ALTER TABLE members OWNER TO panda;
ALTER TABLE members ADD PRIMARY KEY (uname,gname);

CREATE TABLE multicloud_history (
	site varchar(60) NOT NULL,
	multicloud varchar(64),
	last_update timestamp NOT NULL
) ;
ALTER TABLE multicloud_history OWNER TO panda;
CREATE INDEX multicloud_history_site_idx ON multicloud_history (site);

CREATE TABLE pandaconfig (
	name varchar(60) NOT NULL,
	controller varchar(20) NOT NULL,
	pathena varchar(20)
) ;
ALTER TABLE pandaconfig OWNER TO panda;
ALTER TABLE pandaconfig ADD PRIMARY KEY (name);

CREATE TABLE pandalog_fax (
	bintime timestamp DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	name varchar(30),
	module varchar(30),
	loguser varchar(80),
	type varchar(20),
	pid bigint DEFAULT '0',
	loglevel integer DEFAULT '0',
	levelname varchar(30),
	time varchar(30),
	filename varchar(100),
	line integer DEFAULT '0',
	message varchar(4000)
) PARTITION BY RANGE (bintime) ;
ALTER TABLE pandalog_fax OWNER TO panda;

CREATE TABLE panda_ddm_bl (
	panda_site_name varchar(52),
	ddm_endpoint_name varchar(52),
	roles varchar(60),
	ord bigint
) ;
ALTER TABLE panda_ddm_bl OWNER TO panda;

CREATE TABLE passwords (
	id integer NOT NULL,
	pass varchar(60) NOT NULL
) ;
ALTER TABLE passwords OWNER TO panda;
ALTER TABLE passwords ADD PRIMARY KEY (id);

CREATE TABLE pilotqueue (
	jobid varchar(100) NOT NULL,
	tpid varchar(60) NOT NULL,
	url varchar(200),
	nickname varchar(60) NOT NULL,
	system varchar(20) NOT NULL,
	user_ varchar(60) NOT NULL,
	host varchar(60) NOT NULL,
	submithost varchar(60) NOT NULL,
	queueid varchar(60) NOT NULL,
	type varchar(20) NOT NULL,
	pandaid bigint,
	tcheck timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	state varchar(30) NOT NULL,
	tstate timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tenter timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tsubmit timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	taccept timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tschedule timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tstart timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tend timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tdone timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tretrieve timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	status varchar(20) NOT NULL,
	errcode bigint NOT NULL DEFAULT '0',
	errinfo varchar(150) NOT NULL,
	message varchar(4000),
	schedd_name varchar(60) NOT NULL,
	workernode varchar(60) NOT NULL
) ;
COMMENT ON COLUMN pilotqueue.user_ IS E'ORIGINAL NAME:user';
ALTER TABLE pilotqueue OWNER TO panda;
CREATE INDEX pilotqueue_nickname_idx ON pilotqueue (nickname);
CREATE INDEX pilotqueue_pandaid_idx ON pilotqueue (pandaid);
CREATE INDEX pilotqueue_queueid_idx ON pilotqueue (queueid);
CREATE INDEX pilotqueue_state_idx ON pilotqueue (state);
CREATE UNIQUE INDEX pilotqueue_tpid_idx ON pilotqueue (tpid);
ALTER TABLE pilotqueue ADD PRIMARY KEY (jobid,nickname);

CREATE TABLE pilotqueue_bnl (
	jobid varchar(100) NOT NULL,
	tpid varchar(60) NOT NULL,
	url varchar(200) NOT NULL,
	nickname varchar(60) NOT NULL,
	system varchar(20) NOT NULL,
	user_ varchar(60) NOT NULL,
	host varchar(60) NOT NULL,
	submithost varchar(60) NOT NULL,
	schedd_name varchar(60) NOT NULL,
	queueid varchar(60) NOT NULL,
	type varchar(20) NOT NULL,
	pandaid bigint,
	tcheck timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	state varchar(30) NOT NULL,
	tstate timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tenter timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tsubmit timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	taccept timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tschedule timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tstart timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tend timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tdone timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tretrieve timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	status varchar(20) NOT NULL,
	errcode bigint NOT NULL DEFAULT '0',
	errinfo varchar(150) NOT NULL,
	message varchar(4000),
	workernode varchar(60) NOT NULL
) ;
COMMENT ON COLUMN pilotqueue_bnl.user_ IS E'ORIGINAL NAME:user';
ALTER TABLE pilotqueue_bnl OWNER TO panda;
CREATE INDEX pilotqueuebnl_nickname_idx ON pilotqueue_bnl (nickname);
CREATE INDEX pilotqueuebnl_pandaid_idx ON pilotqueue_bnl (pandaid);
CREATE INDEX pilotqueuebnl_queueid_idx ON pilotqueue_bnl (queueid);
CREATE INDEX pilotqueuebnl_state_idx ON pilotqueue_bnl (state);
ALTER TABLE pilotqueue_bnl ADD PRIMARY KEY (tpid);

CREATE TABLE pilottype (
	name varchar(60) NOT NULL,
	script varchar(60) NOT NULL,
	url varchar(150) NOT NULL,
	system varchar(60) NOT NULL
) ;
ALTER TABLE pilottype OWNER TO panda;
ALTER TABLE pilottype ADD PRIMARY KEY (name);

CREATE TABLE productiondatasets (
	name varchar(120) NOT NULL,
	version bigint,
	vuid varchar(40) NOT NULL,
	files integer,
	gb integer,
	events integer,
	site varchar(60),
	sw_release varchar(20),
	geometry varchar(20),
	jobid bigint,
	pandaid bigint,
	prodtime timestamp,
	timestamp bigint
) ;
ALTER TABLE productiondatasets OWNER TO panda;

CREATE TABLE proxykey (
	id bigint NOT NULL,
	dn varchar(100) NOT NULL,
	credname varchar(40) NOT NULL,
	created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	expires timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	origin varchar(80) NOT NULL,
	myproxy varchar(80) NOT NULL
) ;
ALTER TABLE proxykey OWNER TO panda;
ALTER TABLE proxykey ADD PRIMARY KEY (id);

CREATE TABLE redirect (
	service varchar(30) NOT NULL,
	type varchar(30) NOT NULL,
	site varchar(60) NOT NULL,
	description varchar(120) NOT NULL,
	url varchar(250) NOT NULL,
	testurl varchar(250),
	response varchar(30) NOT NULL,
	aliveresponse varchar(30) NOT NULL,
	responsetime integer,
	rank integer,
	performance integer,
	status varchar(30) NOT NULL,
	log varchar(250),
	statustime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	usetime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss')
) ;
ALTER TABLE redirect OWNER TO panda;
ALTER TABLE redirect ADD PRIMARY KEY (url);

CREATE TABLE savedpages (
	name varchar(30) NOT NULL,
	flag varchar(20) NOT NULL,
	hours integer NOT NULL DEFAULT '0',
	html text NOT NULL,
	lastmod timestamp,
	interval integer
) ;
ALTER TABLE savedpages OWNER TO panda;
ALTER TABLE savedpages ADD PRIMARY KEY (name,flag,hours);

CREATE TABLE schedconfig (
	name varchar(60) DEFAULT 'default',
	nickname varchar(60),
	queue varchar(60),
	localqueue varchar(50),
	system varchar(60),
	sysconfig varchar(20),
	environ varchar(250),
	gatekeeper varchar(120),
	jobmanager varchar(80),
	se varchar(400),
	ddm varchar(120),
	jdladd varchar(500),
	globusadd varchar(100),
	jdl varchar(60),
	jdltxt varchar(500),
	version varchar(60),
	site varchar(60),
	region varchar(60),
	gstat varchar(60),
	tags varchar(200),
	cmd varchar(200),
	lastmod timestamp DEFAULT LOCALTIMESTAMP,
	errinfo varchar(80),
	nqueue bigint DEFAULT '0',
	comment_ varchar(500),
	appdir varchar(500),
	datadir varchar(80),
	tmpdir varchar(80),
	wntmpdir varchar(80),
	dq2url varchar(80),
	special_par varchar(80),
	python_path varchar(80),
	nodes bigint DEFAULT '0',
	status varchar(10) DEFAULT 'offline',
	copytool varchar(80),
	copysetup varchar(200),
	releases varchar(500),
	sepath varchar(400),
	envsetup varchar(200),
	copyprefix varchar(500),
	lfcpath varchar(80),
	seopt varchar(400),
	sein varchar(400),
	seinopt varchar(400),
	lfchost varchar(80),
	cloud varchar(60),
	siteid varchar(60),
	proxy varchar(80),
	retry varchar(10),
	queuehours integer DEFAULT '0',
	envsetupin varchar(200),
	copytoolin varchar(180),
	copysetupin varchar(200),
	seprodpath varchar(400),
	lfcprodpath varchar(80),
	copyprefixin varchar(360),
	recoverdir varchar(80),
	memory bigint DEFAULT '0',
	maxtime bigint DEFAULT '0',
	space bigint DEFAULT '0',
	tspace timestamp DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	cmtconfig varchar(250),
	setokens varchar(80),
	glexec varchar(10),
	priorityoffset varchar(60),
	allowedgroups varchar(100),
	defaulttoken varchar(100),
	pcache varchar(100),
	validatedreleases varchar(500),
	accesscontrol varchar(20),
	dn varchar(100),
	email varchar(60),
	allowednode varchar(80),
	maxinputsize bigint,
	timefloor integer,
	depthboost bigint,
	idlepilotsupression bigint,
	pilotlimit bigint,
	transferringlimit bigint,
	cachedse smallint,
	corecount smallint,
	countrygroup varchar(64),
	availablecpu varchar(64),
	availablestorage varchar(64),
	pledgedcpu varchar(64),
	pledgedstorage varchar(64),
	statusoverride varchar(256) DEFAULT 'offline',
	allowdirectaccess varchar(10) DEFAULT 'False',
	gocname varchar(64) DEFAULT 'site',
	tier varchar(15),
	multicloud varchar(64),
	lfcregister varchar(10),
	stageinretry bigint DEFAULT 2,
	stageoutretry bigint DEFAULT 2,
	fairsharepolicy varchar(512),
	allowfax varchar(64),
	faxredirector varchar(256),
	maxwdir bigint,
	celist varchar(4000),
	minmemory bigint,
	maxmemory bigint,
	mintime bigint,
	allowjem varchar(64),
	catchall varchar(512),
	faxdoor varchar(128),
	wansourcelimit integer,
	wansinklimit integer,
	auto_mcu smallint DEFAULT 0,
	objectstore varchar(512),
	allowhttp varchar(64),
	httpredirector varchar(256),
	multicloud_append varchar(64),
	corepower bigint,
	wnconnectivity varchar(256),
	cloudrshare varchar(256),
	sitershare varchar(256),
	autosetup_post varchar(512),
	autosetup_pre varchar(512),
	direct_access_lan varchar(32) DEFAULT 'False',
	direct_access_wan varchar(32) DEFAULT 'False',
	maxrss integer DEFAULT 0,
	minrss integer DEFAULT 0,
	use_newmover varchar(32) DEFAULT 'False',
	pilotversion varchar(32) DEFAULT 'current',
	objectstores varchar(4000),
	container_options varchar(1024),
	container_type varchar(256),
	jobseed varchar(16),
	pilot_manager varchar(16),
	capability varchar(16),
	resource_type varchar(16),
	workflow varchar(16),
	maxdiskio bigint
) ;
COMMENT ON COLUMN schedconfig.accesscontrol IS E'Allows access to specific groups of people. Set to grouplist if desired';
COMMENT ON COLUMN schedconfig.allowdirectaccess IS E'Jobs with transferType=direct will be matched by brokerage to sites with allowdirectaccess=True, allowdirectaccess=True for all sites which have copysetup true for direct access. Default False';
COMMENT ON COLUMN schedconfig.allowedgroups IS E'Sets allowed VOMS groups for the queue. Example: /atlas/.+/Role=production';
COMMENT ON COLUMN schedconfig.allowednode IS E'Determines allowed worker node names within the queue. Example: (brndt3head|wrk[0-9]+prv)\.hep\.brandeis\.edu';
COMMENT ON COLUMN schedconfig.allowfax IS E'Is FAX allowed or not? (True/False)';
COMMENT ON COLUMN schedconfig.appdir IS E'Directory in which the ATLAS Athena software releases are installed';
COMMENT ON COLUMN schedconfig.autosetup_post IS E'Path to local setup files, or blank when not needed.';
COMMENT ON COLUMN schedconfig.autosetup_pre IS E'Path to local setup files, or blank when not needed.';
COMMENT ON COLUMN schedconfig.availablecpu IS E'Amount of the real CPU capacity of the site as seen by ATLAS in HS06 (cf. PLEDGEDCPU). It could be the entire capacity of the site for an ATLAS-only site, the capacity of the ATLAS share, or the capacity of the ATLAS share plus an average capacity increment from opportunistic ATLAS use of non-ATLAS resources at the site.';
COMMENT ON COLUMN schedconfig.availablestorage IS E'Amount of real storage compared to pledged PLEDGEDSTORAGE';
COMMENT ON COLUMN schedconfig.cachedse IS E'Enable PD2P by setting to 1. Only relevant for ANALY sites.';
COMMENT ON COLUMN schedconfig.celist IS E'A JSON representation of the list of CEs that a virtual queue (often seen in ANALY queues) may address. To populate, work by analogy from other queues where celist is set. This is ONLY for AGIS compatibility, to allow changes to schedconfig to auto-populate AGIS.';
COMMENT ON COLUMN schedconfig.cloud IS E'The home cloud, possibly at the start of a comma-separated list of clouds. The site can contribute to any cloud in the list(Multi-cloud) If disabled, the config file will be found in "Disabled"';
COMMENT ON COLUMN schedconfig.cmd IS E'Batch queue submit command for the queue. Examples: condor_submit -verbose %s, qsub -q panda %s';
COMMENT ON COLUMN schedconfig.cmtconfig IS E'Set to the appropriate CMTCONFIG for a queue. Mostly i686-slc5-gcc43-opt';
COMMENT ON COLUMN schedconfig.comment_ IS E'Any comment necessary to the queue. This is NOT stored in the SVN.';
COMMENT ON COLUMN schedconfig.copyprefix IS E'Prefix for SRM copies out from the queue. Example: ^srm://gk03.atlas-swt2.org. If COPYPREFIXIN is None, this covers all copies in and out of the queue.';
COMMENT ON COLUMN schedconfig.copyprefixin IS E'Prefix for SRM copies into the queue. Example: ^srm://gk03.atlas-swt2.org';
COMMENT ON COLUMN schedconfig.copysetup IS E'Commands to be run before (inbound) outbound copies; may be a script, or a set of commands like /somepath/setup.sh^srm://lcg-se0.ifh.de/^dcap://lcg-dc0.ifh.de:22125/^False^True. If COPYSETUPIN is None, this covers all copies in and out of the queue. For more info see https://twiki.cern.ch/twiki/bin/viewauth/Atlas/PandaPilot#Direct_access_vs_stage_in_mode';
COMMENT ON COLUMN schedconfig.copysetupin IS E'Commands to be run before inbound copies; essentially the same as COPYSETUP but can be used to specify a different stage-in setup than for stage-out';
COMMENT ON COLUMN schedconfig.copytool IS E'The (inbound) outbound copy tool for (in)output files. Examples: cp, lcg-cp, storm, xcp. If COPYTOOLIN is None, this covers all copies in and out of the queue.
        lcg-cp ( lcgcp ): pilots use lcg-cr for upload to SE and registration to LFC
        lcg-cp2 ( lcgcp2 ): pilots use lcg-cp for upload to SE and no registration to LFC by pilot. To make the registration done the panda server, the other parameter needs to be set (LFCREGISTER=''server'')';
COMMENT ON COLUMN schedconfig.copytoolin IS E'The inbound copy tool for input files. Examples: cp, lcg-cp, storm, xcp. If set to None, COPYTOOL will be used for both stage-in and stage-out';
COMMENT ON COLUMN schedconfig.corecount IS E'Number of cores per machine for AthenaMP use';
COMMENT ON COLUMN schedconfig.countrygroup IS E'Allows for national federations';
COMMENT ON COLUMN schedconfig.datadir IS E'Directory in which data are stored';
COMMENT ON COLUMN schedconfig.ddm IS E'A comma-separated list of DDM endpoints used for input data. For a T1 the order should match the setoken order, because this is used to translate the output file space token into the final ddm destination. It is ok for the ddm list to be longer than setokens, e.g. to have an extra input location. For a T2 this is typically just local PRODDISK. The first value in the list has some special meanings. 1) The free space in this endpoint ends up in schedconfig.space(updated via curl). 2) If the site is a T1, then it also ends up in the cloud table space, which is used for task assignment, 3) Bamboo may choose to subscribe EVNT input between clouds, to aid brokerage - the destination space token is this one.';
COMMENT ON COLUMN schedconfig.defaulttoken IS E'??';
COMMENT ON COLUMN schedconfig.depthboost IS E'Maximum number of pilotDepth block submissions when a site has enough jobs';
COMMENT ON COLUMN schedconfig.direct_access_lan IS E'To manage direct access (LAN) configuration, replacing the copysetup fields. We will still keep the copysetup[in] fields, but they will not be used in the same complex way';
COMMENT ON COLUMN schedconfig.direct_access_wan IS E'To manage direct access (WAN) configuration, replacing the copysetup fields. We will still keep the copysetup[in] fields, but they will not be used in the same complex way';
COMMENT ON COLUMN schedconfig.dn IS E'Grid DN of the most recent modifier';
COMMENT ON COLUMN schedconfig.dq2url IS E'DQ2 Access URL';
COMMENT ON COLUMN schedconfig.email IS E'The site admin contact email(s)';
COMMENT ON COLUMN schedconfig.environ IS E'List of environment variables to be set. Example: APP=/home/osgstore/app TMP=/home/osgstore/tmp DATA=/home/osgstore/data';
COMMENT ON COLUMN schedconfig.envsetup IS E'Command that is run (can be variable setting or script) to set up copy for (in)out transfers. If ENVSETUPIN is None, this covers all copies in and out of the queue.';
COMMENT ON COLUMN schedconfig.envsetupin IS E'Command that is run (can be variable setting or script) to set up copy for out transfers.';
COMMENT ON COLUMN schedconfig.errinfo IS E'Not used.';
COMMENT ON COLUMN schedconfig.faxredirector IS E'The FAX redirector (e.g. root://glrd.usatlas.org/)';
COMMENT ON COLUMN schedconfig.gatekeeper IS E'The physical hostname of the headnode for the queue. For virtual queues, it is to be set';
COMMENT ON COLUMN schedconfig.glexec IS E'Is GLEXEC set? (No, for the most part)';
COMMENT ON COLUMN schedconfig.globusadd IS E' A part of the JDL for some circumstances. ??';
COMMENT ON COLUMN schedconfig.gocname IS E' Set from AGIS rc_name';
COMMENT ON COLUMN schedconfig.gstat IS E' Derived from AGIS atlas_site variable Derived FROM BDII GSTAT variable. Site IDENTITY.';
COMMENT ON COLUMN schedconfig.idlepilotsupression IS E'O nly send an idling pilot every N cycles';
COMMENT ON COLUMN schedconfig.jdl IS E'The NAME of the entry in the jdllist table that provides the basic JDL for the jobs being submitted';
COMMENT ON COLUMN schedconfig.jdladd IS E'Any additional JDL needed for the queue. Must end with Queue, on its own line.';
COMMENT ON COLUMN schedconfig.jdltxt IS E'??';
COMMENT ON COLUMN schedconfig.jobmanager IS E'condor, lsf, cream, arc, pbs, etc. For virtual queues, it is to.be.set.';
COMMENT ON COLUMN schedconfig.lastmod IS E'Timestamp of last modification. Not stored in SVN.';
COMMENT ON COLUMN schedconfig.lfchost IS E'LFC (LHC File Catalog) to use with this queue.';
COMMENT ON COLUMN schedconfig.lfcpath IS E'LFC path on LFCHOST to use with this queue.';
COMMENT ON COLUMN schedconfig.lfcprodpath IS E'LFC path on LFCHOST to use with this queue for PROD jobs.';
COMMENT ON COLUMN schedconfig.lfcregister IS E'LFC registration is done by the pilot ( ''NONE'' ) or by the panda server ( ''server'' ). should be used with COPYTOOL=lcgcp2 . All the queues in the panda siteid MUST have the same value.';
COMMENT ON COLUMN schedconfig.localqueue IS E'local queue name to use in the queue''s batch SYSTEM. IF unset, this IS NOT specified.';
COMMENT ON COLUMN schedconfig.maxinputsize IS E'14336 is the default (14 GB), but can be higher. Maximum copy-to-scratch input data total. To be obsolete after MAXWDIR being set properly.';
COMMENT ON COLUMN schedconfig.maxrss IS E'Limit on the RSS memory available to the process being run by the pilot';
COMMENT ON COLUMN schedconfig.maxtime IS E'Wall time. Zero means infinite.';
COMMENT ON COLUMN schedconfig.maxwdir IS E'Maximum available workdir space per job. The initial value has been set as MAXINPUTSIZE + 2GB';
COMMENT ON COLUMN schedconfig.memory IS E'Memory available, MB. Zero means infinite. The pilot wrapper will set this as a virtual memory limit for athena to cause a clean malloc() failure.';
COMMENT ON COLUMN schedconfig.minrss IS E'Minimum RSS memory available to the process being run by the pilot';
COMMENT ON COLUMN schedconfig.name IS E'Unused. Set to default.';
COMMENT ON COLUMN schedconfig.nickname IS E'The unique PRIMARY KEY of the table. The queue is named by this parameter. Should match the config file name.';
COMMENT ON COLUMN schedconfig.nodes IS E'Number of compute elements in the queue''s possession.';
COMMENT ON COLUMN schedconfig.nqueue IS E'Baseline number of pilots to queue. Not stored in SVN.';
COMMENT ON COLUMN schedconfig.objectstores IS E'Stores the objectstore characteristics of a queue';
COMMENT ON COLUMN schedconfig.pcache IS E'pCache enabled ( None or 1)';
COMMENT ON COLUMN schedconfig.pilotlimit IS E'Maximum number of pilots to have (in any state) at a site';
COMMENT ON COLUMN schedconfig.pilotversion IS E'Allows specification of a pilot version that should run on the queue. Default is "current"';
COMMENT ON COLUMN schedconfig.pledgedstorage IS E'Storage Pledges (MoU), contributes to ration with AVAILABLESTORAGE';
COMMENT ON COLUMN schedconfig.priorityoffset IS E'??';
COMMENT ON COLUMN schedconfig.proxy IS E'donothide or noimport. Currently not used by the pilot';
COMMENT ON COLUMN schedconfig.python_path IS E'Sets the PYTHONPATH variable at run start';
COMMENT ON COLUMN schedconfig.queue IS E'GATEKEEPER/JOBMANAGER';
COMMENT ON COLUMN schedconfig.queuehours IS E'Max job lifetime in hours';
COMMENT ON COLUMN schedconfig.recoverdir IS E'Local env. variable for recovery data. Example: $ATLAS_RECOVERDIR';
COMMENT ON COLUMN schedconfig.region IS E'Region. Example: us';
COMMENT ON COLUMN schedconfig.releases IS E'Becoming obsolete. List of releases available, separated by pipes. Autogenerated for BDII sites. Example: 0.1.31|0.1.32|0.1.33|0.1.34|14.2.21|14.2.25|15.0.0|15.3.1|15.5.4|15.6.1|15.6.10|15.6.11|15.6.3|15.6.5|15.6.6|15.6.7|15.6.8|15.6.9|15.8.0';
COMMENT ON COLUMN schedconfig.retry IS E'(TRUE or FALSE) Turns on or off job recovery';
COMMENT ON COLUMN schedconfig.se IS E'space token and full endpoint of default output destination. The path is extracted from the matching token in seprodpath If output files do not have spacetoken set, then the token in this entry is used. This applies to direct storage from T1 jobs, but not to subscriptions from T2(see setokens).';
COMMENT ON COLUMN schedconfig.sein IS E'Comma separated list of SEs, same length as DDM and SEPATH/SEPRODPATH for input transfers';
COMMENT ON COLUMN schedconfig.seinopt IS E'Currently not used by the pilot';
COMMENT ON COLUMN schedconfig.seopt IS E'Comma separated list. seopt is used in combination with SETOKENS to select the proper SE corresponding to a given space token descriptor. The order of SE''s listed IN SEOPT has TO match THE ORDER OF tokens IN SETOKENS';
COMMENT ON COLUMN schedconfig.sepath IS E'Same as SEPRODPATH but for analysis sites';
COMMENT ON COLUMN schedconfig.seprodpath IS E'list of destination paths, to append to endpoint in ''se''. Compressed notation is supported /blah/[tok1,tok2]/more/. Must be the same length as setokens.';
COMMENT ON COLUMN schedconfig.setokens IS E'List of destination space tokens. The first token is the default destination(for subscription from T2) if an output file does not have spacetoken set. Must match length of SEPRODPATH';
COMMENT ON COLUMN schedconfig.site IS E'Site name';
COMMENT ON COLUMN schedconfig.siteid IS E'Name of similar queues in site (shared gatekeepers)';
COMMENT ON COLUMN schedconfig.space IS E'Available disk space on the site. Refers to first token in ddm.';
COMMENT ON COLUMN schedconfig.special_par IS E'Additional JDL to add to job';
COMMENT ON COLUMN schedconfig.status IS E'Site online/offline/test/brokeroff status. Not stored in SVN.';
COMMENT ON COLUMN schedconfig.statusoverride IS E'(offline, notonline, None) to manage changing of site status through cloud curl commands. Default IS ''offline'', site will not change status. notonline IS ''site cannot be set online. None IS ''all changes are possible''';
COMMENT ON COLUMN schedconfig.sysconfig IS E'(None or manual) IS Prevent BDII updating OF PARAMETERS';
COMMENT ON COLUMN schedconfig.system IS E'Same as JOBMANAGER';
COMMENT ON COLUMN schedconfig.tags IS E'Obsolete';
COMMENT ON COLUMN schedconfig.tier IS E'?';
COMMENT ON COLUMN schedconfig.timefloor IS E'The pilot will keep downloading jobs during the limit set by timefloor (minutes). If at the end of a job, more time has passed than that of timefloor since the beginning of the first job, the pilot will end';
COMMENT ON COLUMN schedconfig.tmpdir IS E'Temp directory';
COMMENT ON COLUMN schedconfig.transferringlimit IS E'Maximum number of transferring jobs to allow at a site';
COMMENT ON COLUMN schedconfig.tspace IS E'?';
COMMENT ON COLUMN schedconfig.validatedreleases IS E'Reprocessing jobs are brokered only to the queues with this value set to ''True''';
COMMENT ON COLUMN schedconfig.version IS E'Unused';
COMMENT ON COLUMN schedconfig.wntmpdir IS E'Worker node temp DIRECTORY ';
ALTER TABLE schedconfig OWNER TO panda;

CREATE TABLE schedconfig_1st_attempt (
	nickname varchar(60) NOT NULL,
	localqueue varchar(20),
	system varchar(60) NOT NULL,
	gatekeeper varchar(40),
	jobmanager varchar(80),
	se varchar(400),
	ddm varchar(120),
	globusadd varchar(100),
	site varchar(60) NOT NULL,
	region varchar(60),
	gstat varchar(60),
	tags varchar(200),
	lastmod timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	errinfo varchar(80),
	comment_ varchar(500),
	appdir varchar(500),
	tmpdir varchar(80),
	wntmpdir varchar(80),
	dq2url varchar(80),
	special_par varchar(80),
	python_path varchar(80),
	nodes bigint NOT NULL DEFAULT '0',
	status varchar(10) DEFAULT 'offline',
	copytool varchar(80),
	copysetup varchar(200),
	releases varchar(500),
	sepath varchar(400),
	envsetup varchar(200),
	copyprefix varchar(160),
	lfcpath varchar(80),
	seopt varchar(400),
	sein varchar(400),
	seinopt varchar(400),
	lfchost varchar(80),
	cloud varchar(60),
	siteid varchar(60),
	retry varchar(10),
	queuehours integer NOT NULL DEFAULT '0',
	envsetupin varchar(200),
	copytoolin varchar(180),
	copysetupin varchar(200),
	seprodpath varchar(400),
	lfcprodpath varchar(80),
	copyprefixin varchar(360),
	recoverdir varchar(80),
	memory bigint NOT NULL DEFAULT '0',
	maxtime bigint NOT NULL DEFAULT '0',
	space bigint NOT NULL DEFAULT '0',
	tspace timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	cmtconfig varchar(250),
	setokens varchar(80),
	glexec varchar(10),
	priorityoffset varchar(60),
	allowedgroups varchar(100),
	defaulttoken varchar(100),
	pcache varchar(100),
	validatedreleases varchar(500),
	accesscontrol varchar(20),
	dn varchar(100),
	email varchar(60),
	allowednode varchar(80),
	maxinputsize bigint,
	timefloor integer,
	depthboost bigint,
	idlepilotsupression bigint,
	pilotlimit bigint,
	transferringlimit bigint,
	cachedse smallint,
	corecount smallint,
	countrygroup varchar(64),
	availablecpu varchar(64),
	availablestorage varchar(64),
	pledgedcpu varchar(64),
	pledgedstorage varchar(64),
	statusoverride varchar(256) DEFAULT 'offline',
	allowdirectaccess varchar(10) DEFAULT 'False',
	gocname varchar(64) DEFAULT 'site',
	tier varchar(15),
	multicloud varchar(64),
	lfcregister varchar(10),
	stageinretry bigint DEFAULT 2,
	stageoutretry bigint DEFAULT 2,
	fairsharepolicy varchar(512),
	allowfax varchar(64),
	faxredirector varchar(256),
	maxwdir bigint,
	celist varchar(4000),
	minmemory bigint,
	maxmemory bigint,
	mintime bigint,
	allowjem varchar(64),
	catchall varchar(512),
	faxdoor varchar(128),
	wansourcelimit integer,
	wansinklimit integer
) ;
ALTER TABLE schedconfig_1st_attempt OWNER TO panda;

CREATE TABLE schedconfig_2nd_attempt (
	nickname varchar(60) NOT NULL,
	queue varchar(60),
	localqueue varchar(20),
	system varchar(60) NOT NULL,
	gatekeeper varchar(40),
	jobmanager varchar(80),
	se varchar(400),
	ddm varchar(120),
	globusadd varchar(100),
	site varchar(60) NOT NULL,
	region varchar(60),
	gstat varchar(60),
	tags varchar(200),
	lastmod timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	errinfo varchar(80),
	comment_ varchar(500),
	appdir varchar(500),
	tmpdir varchar(80),
	wntmpdir varchar(80),
	dq2url varchar(80),
	special_par varchar(80),
	python_path varchar(80),
	nodes bigint NOT NULL DEFAULT '0',
	status varchar(10) DEFAULT 'offline',
	copytool varchar(80),
	copysetup varchar(200),
	releases varchar(500),
	sepath varchar(400),
	envsetup varchar(200),
	copyprefix varchar(160),
	lfcpath varchar(80),
	seopt varchar(400),
	sein varchar(400),
	seinopt varchar(400),
	lfchost varchar(80),
	cloud varchar(60),
	siteid varchar(60),
	retry varchar(10),
	queuehours integer NOT NULL DEFAULT '0',
	envsetupin varchar(200),
	copytoolin varchar(180),
	copysetupin varchar(200),
	seprodpath varchar(400),
	lfcprodpath varchar(80),
	copyprefixin varchar(360),
	recoverdir varchar(80),
	memory bigint NOT NULL DEFAULT '0',
	maxtime bigint NOT NULL DEFAULT '0',
	space bigint NOT NULL DEFAULT '0',
	tspace timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	cmtconfig varchar(250),
	setokens varchar(80),
	glexec varchar(10),
	priorityoffset varchar(60),
	allowedgroups varchar(100),
	defaulttoken varchar(100),
	pcache varchar(100),
	validatedreleases varchar(500),
	accesscontrol varchar(20),
	dn varchar(100),
	email varchar(60),
	allowednode varchar(80),
	maxinputsize bigint,
	timefloor integer,
	depthboost bigint,
	idlepilotsupression bigint,
	pilotlimit bigint,
	transferringlimit bigint,
	cachedse smallint,
	corecount smallint,
	countrygroup varchar(64),
	availablecpu varchar(64),
	availablestorage varchar(64),
	pledgedcpu varchar(64),
	pledgedstorage varchar(64),
	statusoverride varchar(256) DEFAULT 'offline',
	allowdirectaccess varchar(10) DEFAULT 'False',
	gocname varchar(64) DEFAULT 'site',
	tier varchar(15),
	multicloud varchar(64),
	lfcregister varchar(10),
	stageinretry bigint DEFAULT 2,
	stageoutretry bigint DEFAULT 2,
	fairsharepolicy varchar(512),
	allowfax varchar(64),
	faxredirector varchar(256),
	maxwdir bigint,
	celist varchar(4000),
	minmemory bigint,
	maxmemory bigint,
	mintime bigint,
	allowjem varchar(64),
	catchall varchar(512),
	faxdoor varchar(128),
	wansourcelimit integer,
	wansinklimit integer
) ;
ALTER TABLE schedconfig_2nd_attempt OWNER TO panda;
ALTER TABLE schedconfig_2nd_attempt ADD PRIMARY KEY (nickname);

CREATE TABLE schedinstance (
	name varchar(60) NOT NULL DEFAULT 'default',
	nickname varchar(60) NOT NULL,
	pandasite varchar(60) NOT NULL,
	nqueue bigint NOT NULL DEFAULT '5',
	nqueued bigint NOT NULL DEFAULT '0',
	nrunning bigint NOT NULL DEFAULT '0',
	nfinished bigint NOT NULL DEFAULT '0',
	nfailed bigint NOT NULL DEFAULT '0',
	naborted bigint NOT NULL DEFAULT '0',
	njobs bigint NOT NULL DEFAULT '0',
	tvalid timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	lastmod timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	errinfo varchar(150),
	ndone bigint NOT NULL DEFAULT '0',
	totrunt bigint NOT NULL DEFAULT '0',
	comment_ varchar(500)
) ;
COMMENT ON COLUMN schedinstance.comment_ IS E'ORIGINAL NAME:comment';
ALTER TABLE schedinstance OWNER TO panda;
CREATE INDEX schedinstance_nickname_idx ON schedinstance (nickname);
ALTER TABLE schedinstance ADD PRIMARY KEY (nickname,pandasite);

CREATE TABLE servicelist (
	id bigint NOT NULL,
	name varchar(60) NOT NULL DEFAULT 'default',
	host varchar(100),
	pid bigint,
	userid varchar(40),
	type varchar(30),
	grp varchar(20),
	description varchar(200),
	url varchar(200),
	testurl varchar(200),
	response varchar(200),
	tresponse bigint,
	tstart timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	tstop timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	tcheck timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	cyclesec bigint,
	status varchar(20) NOT NULL,
	lastmod timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	config varchar(200),
	message varchar(4000),
	restartcmd varchar(4000),
	doaction varchar(4000)
) ;
ALTER TABLE servicelist OWNER TO panda;
CREATE INDEX servicelist_nameuserid_idx ON servicelist (name, host, config, userid);
CREATE INDEX servicelist_name_idx ON servicelist (name, host, config);
ALTER TABLE servicelist ADD PRIMARY KEY (id);

CREATE TABLE siteaccess (
	id bigint NOT NULL,
	dn varchar(100),
	pandasite varchar(100),
	poffset bigint NOT NULL DEFAULT 0,
	rights varchar(30),
	status varchar(20),
	workinggroups varchar(100),
	created timestamp
) ;
ALTER TABLE siteaccess OWNER TO panda;
CREATE UNIQUE INDEX siteaccess_dnsite_idx ON siteaccess (dn, pandasite);
ALTER TABLE siteaccess ADD PRIMARY KEY (id);

CREATE TABLE sitedata (
	site varchar(60),
	flag varchar(20),
	hours integer DEFAULT '0',
	nwn integer,
	memmin integer,
	memmax integer,
	si2000min integer,
	si2000max integer,
	os varchar(30),
	space varchar(30),
	minjobs integer,
	maxjobs integer,
	laststart timestamp,
	lastend timestamp,
	lastfail timestamp,
	lastpilot timestamp,
	lastpid integer,
	nstart integer DEFAULT '0',
	finished integer DEFAULT '0',
	failed integer DEFAULT '0',
	defined integer DEFAULT '0',
	assigned integer DEFAULT '0',
	waiting integer DEFAULT '0',
	activated integer DEFAULT '0',
	holding integer DEFAULT '0',
	running integer DEFAULT '0',
	transferring integer DEFAULT '0',
	getjob integer DEFAULT '0',
	updatejob integer DEFAULT '0',
	lastmod timestamp DEFAULT LOCALTIMESTAMP,
	ncpu integer,
	nslot integer,
	nojob integer,
	getjobabs bigint,
	updatejobabs bigint,
	nojobabs bigint
) ;
COMMENT ON COLUMN sitedata.getjobabs IS E'Absolute number of getJobs requests';
COMMENT ON COLUMN sitedata.nojob IS E'Number of getJobs requests that did not get a Job';
COMMENT ON COLUMN sitedata.nojobabs IS E'Absolute number of getJobs requests that did not get a Job';
COMMENT ON COLUMN sitedata.updatejobabs IS E'Absolute number of updateJobs';
ALTER TABLE sitedata OWNER TO panda;

CREATE TABLE siteddm (
	name varchar(60) NOT NULL,
	incmd varchar(60) NOT NULL,
	inpath varchar(200),
	inopts varchar(60),
	outcmd varchar(60) NOT NULL,
	outopts varchar(60),
	outpath varchar(200) NOT NULL
) ;
ALTER TABLE siteddm OWNER TO panda;
ALTER TABLE siteddm ADD PRIMARY KEY (name);

CREATE TABLE sitehistory (
	site varchar(60) NOT NULL,
	flag varchar(20) NOT NULL,
	time timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	hours integer NOT NULL DEFAULT '0',
	nwn integer,
	memmin integer,
	memmax integer,
	si2000min integer,
	si2000max integer,
	si2000a integer,
	si2000p integer,
	walla integer,
	wallp integer,
	os varchar(30) NOT NULL,
	space varchar(30) NOT NULL,
	minjobs integer,
	maxjobs integer,
	laststart timestamp,
	lastend timestamp,
	lastfail timestamp,
	lastpilot timestamp,
	lastpid integer,
	nstart integer NOT NULL DEFAULT '0',
	finished integer NOT NULL DEFAULT '0',
	failed integer NOT NULL DEFAULT '0',
	defined integer NOT NULL DEFAULT '0',
	assigned integer NOT NULL DEFAULT '0',
	waiting integer NOT NULL DEFAULT '0',
	activated integer NOT NULL DEFAULT '0',
	running integer NOT NULL DEFAULT '0',
	getjob integer NOT NULL DEFAULT '0',
	updatejob integer NOT NULL DEFAULT '0',
	subtot integer NOT NULL DEFAULT '0',
	subdef integer NOT NULL DEFAULT '0',
	subdone integer NOT NULL DEFAULT '0',
	filemods integer NOT NULL DEFAULT '0',
	ncpu integer,
	nslot integer
) ;
ALTER TABLE sitehistory OWNER TO panda;
ALTER TABLE sitehistory ADD PRIMARY KEY (site,flag,time,hours);

CREATE TABLE sitesinfo (
	name varchar(120) NOT NULL,
	nick varchar(20) NOT NULL,
	contact varchar(30),
	email varchar(30),
	status varchar(12),
	lrc varchar(120),
	gridcat integer,
	monalisa varchar(20),
	computingsite varchar(20),
	mainsite varchar(20),
	home varchar(120),
	ganglia varchar(120),
	goc varchar(20),
	gocconfig smallint,
	prodsys varchar(20),
	dq2svc varchar(20),
	usage varchar(40),
	updtime bigint,
	ndatasets integer,
	nfiles integer,
	timestamp bigint
) ;
ALTER TABLE sitesinfo OWNER TO panda;

CREATE TABLE sitestats (
	cloud varchar(10),
	site varchar(60),
	at_time timestamp,
	twidth integer,
	tjob integer,
	tgetjob integer,
	tstagein integer,
	trun integer,
	tstageout integer,
	twait integer,
	nusers integer,
	nwn integer,
	njobs integer,
	nfinished integer,
	nfailed integer,
	nfailapp integer,
	nfailsys integer,
	nfaildat integer,
	ntimeout integer,
	efficiency integer,
	siteutil integer,
	jobtype varchar(30),
	proctype varchar(90),
	username varchar(90),
	ngetjob integer,
	nupdatejob integer,
	release varchar(90),
	nevents bigint,
	spectype varchar(90),
	tsetup integer DEFAULT -1
) PARTITION BY RANGE (at_time) ;
ALTER TABLE sitestats OWNER TO panda;
CREATE INDEX sitestats_time_indx ON sitestats (at_time);

CREATE TABLE sites_matrix_data (
	source varchar(256) NOT NULL,
	destination varchar(256) NOT NULL,
	meas_date timestamp NOT NULL,
	sonarsmlval bigint,
	sonarsmldev bigint,
	sonarmedval bigint,
	sonarmeddev bigint,
	sonarlrgval bigint,
	sonarlrgdev bigint,
	perfsonaravgval bigint,
	xrdcpval bigint,
	sonarsml_last_update timestamp,
	sonarmed_last_update timestamp,
	sonarlrg_last_update timestamp,
	perfsonaravg_last_update timestamp,
	xrdcp_last_update timestamp
) ;
ALTER TABLE sites_matrix_data OWNER TO panda;
ALTER TABLE sites_matrix_data ADD PRIMARY KEY (source,destination);

CREATE TABLE snapshots (
	snapshotid bigint,
	timestamp timestamp,
	nrunning bigint,
	nqueued bigint
) ;
ALTER TABLE snapshots OWNER TO panda;

CREATE TABLE snapshot_data (
	snapshotid bigint,
	shareid bigint,
	nrunning bigint,
	nqueued bigint
) ;
ALTER TABLE snapshot_data OWNER TO panda;

CREATE TABLE submithosts (
	name varchar(60) NOT NULL,
	nickname varchar(20) NOT NULL,
	host varchar(60) NOT NULL,
	system varchar(60) NOT NULL,
	rundir varchar(200) NOT NULL,
	runurl varchar(200) NOT NULL,
	jdltxt varchar(4000),
	pilotqueue varchar(20),
	outurl varchar(200)
) ;
ALTER TABLE submithosts OWNER TO panda;
ALTER TABLE submithosts ADD PRIMARY KEY (host);

CREATE TABLE sysconfig (
	name varchar(60) NOT NULL,
	system varchar(20) NOT NULL,
	config varchar(4000)
) ;
ALTER TABLE sysconfig OWNER TO panda;
ALTER TABLE sysconfig ADD PRIMARY KEY (name,system);

CREATE TABLE taginfo (
	tag varchar(30) NOT NULL,
	description varchar(100) NOT NULL,
	nqueues bigint NOT NULL DEFAULT '0',
	queues varchar(4000)
) ;
ALTER TABLE taginfo OWNER TO panda;
ALTER TABLE taginfo ADD PRIMARY KEY (tag);

CREATE TABLE tags (
	id integer NOT NULL,
	name varchar(20) NOT NULL,
	description varchar(60) NOT NULL,
	ugid integer,
	type varchar(10) NOT NULL,
	itemid integer,
	created timestamp NOT NULL DEFAULT LOCALTIMESTAMP
) ;
ALTER TABLE tags OWNER TO panda;
CREATE INDEX tags_name_idx ON tags (name, ugid);
ALTER TABLE tags ADD PRIMARY KEY (id);

CREATE TABLE test_schedconfig (
	site_name varchar(50),
	schedconfig text,
	last_update timestamp
) ;
ALTER TABLE test_schedconfig OWNER TO panda;

CREATE TABLE usagereport (
	entry integer NOT NULL,
	flag varchar(20) NOT NULL,
	hours integer,
	tstart timestamp,
	tend timestamp,
	tinsert timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	site varchar(60) NOT NULL,
	nwn integer
) ;
ALTER TABLE usagereport OWNER TO panda;
ALTER TABLE usagereport ADD PRIMARY KEY (entry);

CREATE TABLE usercacheusage (
	username varchar(128),
	filename varchar(256),
	hostname varchar(64),
	creationtime timestamp,
	modificationtime timestamp,
	filesize bigint,
	checksum varchar(36),
	aliasname varchar(256)
) PARTITION BY RANGE (creationtime) ;
COMMENT ON TABLE usercacheusage IS E'This table is required to keep track on the disk usage per user, so that can be seen who unfairly occupies too much disk space and eventually ban the user';
ALTER TABLE usercacheusage OWNER TO panda;

CREATE TABLE users (
	id integer NOT NULL,
	name varchar(60) NOT NULL,
	dn varchar(150),
	email varchar(60),
	url varchar(100),
	location varchar(60),
	classa varchar(30),
	classp varchar(30),
	classxp varchar(30),
	sitepref varchar(60),
	gridpref varchar(20),
	queuepref varchar(60),
	scriptcache varchar(100),
	types varchar(60),
	sites varchar(250),
	njobsa bigint,
	njobsp bigint,
	njobs1 bigint,
	njobs7 bigint,
	njobs30 bigint,
	cpua1 bigint,
	cpua7 bigint,
	cpua30 bigint,
	cpup1 bigint,
	cpup7 bigint,
	cpup30 bigint,
	cpuxp1 bigint,
	cpuxp7 bigint,
	cpuxp30 bigint,
	quotaa1 bigint,
	quotaa7 bigint,
	quotaa30 bigint,
	quotap1 bigint,
	quotap7 bigint,
	quotap30 bigint,
	quotaxp1 bigint,
	quotaxp7 bigint,
	quotaxp30 bigint,
	space1 bigint,
	space7 bigint,
	space30 bigint,
	lastmod timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	firstjob timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	latestjob timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	pagecache text,
	cachetime timestamp NOT NULL DEFAULT to_date('01-JAN-70 00:00:00','dd-MON-yy hh24:mi:ss'),
	ncurrent bigint NOT NULL DEFAULT '0',
	jobid bigint NOT NULL DEFAULT '0',
	status varchar(20),
	vo varchar(20)
) ;
ALTER TABLE users OWNER TO panda;
CREATE INDEX users_name_idx ON users (name, vo);
ALTER TABLE users ADD PRIMARY KEY (id);

CREATE TABLE usersubs (
	datasetname varchar(255) NOT NULL,
	site varchar(64) NOT NULL,
	creationdate timestamp,
	modificationdate timestamp,
	nused integer,
	state varchar(30) DEFAULT 'subscribed'
) ;
ALTER TABLE usersubs OWNER TO panda;
ALTER TABLE usersubs ADD PRIMARY KEY (datasetname,site);

CREATE TABLE vorspassfail (
	site_name varchar(32) NOT NULL,
	passfail char(4) NOT NULL,
	last_checked timestamp
) ;
ALTER TABLE vorspassfail OWNER TO panda;
ALTER TABLE vorspassfail ADD PRIMARY KEY (site_name);

CREATE TABLE vo_to_site (
	site_name varchar(32) NOT NULL,
	queue varchar(64) NOT NULL,
	vo_name varchar(32) NOT NULL
) ;
ALTER TABLE vo_to_site OWNER TO panda;
ALTER TABLE vo_to_site ADD PRIMARY KEY (site_name,queue,vo_name);

CREATE TABLE wndata (
	site varchar(60) NOT NULL,
	wn varchar(50) NOT NULL,
	flag varchar(20) NOT NULL,
	hours integer NOT NULL DEFAULT '0',
	mem integer,
	si2000 integer,
	os varchar(30),
	space varchar(30),
	maxjobs integer,
	laststart timestamp,
	lastend timestamp,
	lastfail timestamp,
	lastpilot timestamp,
	lastpid integer,
	nstart integer NOT NULL DEFAULT '0',
	finished integer NOT NULL DEFAULT '0',
	failed integer NOT NULL DEFAULT '0',
	holding integer NOT NULL DEFAULT '0',
	running integer NOT NULL DEFAULT '0',
	transferring integer NOT NULL DEFAULT '0',
	getjob integer NOT NULL DEFAULT '0',
	updatejob integer NOT NULL DEFAULT '0',
	lastmod timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	ncpu integer,
	ncpucurrent integer,
	nslot integer,
	nslotcurrent integer
) ;
ALTER TABLE wndata OWNER TO panda;
ALTER TABLE wndata ADD PRIMARY KEY (site,wn,flag,hours);
