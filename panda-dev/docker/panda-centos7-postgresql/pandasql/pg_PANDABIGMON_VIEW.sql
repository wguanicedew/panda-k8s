-- Generated by Ora2Pg, the Oracle database Schema converter, version 21.1
-- Copyright 2000-2020 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:INT8R

SET client_encoding TO 'UTF8';

SET search_path = doma_pandabigmon,public;
\set ON_ERROR_STOP ON

SET check_function_bodies = false;

CREATE OR REPLACE VIEW jedi_events_grouped (jeditaskid, pandaid, esevents_ready, esevents_sent, esevents_running, esevents_finished, esevents_cancelled, esevents_discarded, esevents_done, esevents_failed, esevents_fatal, esevents_merged) AS SELECT
/*+ cardinality(t1 100) INDEX_RS_ASC(ev JEDI_EVENTS_PK) NO_INDEX_FFS(ev JEDI_EVENTS_PK) */
t1.JEDITASKID,
t1.PANDAID,
SUM(CASE WHEN STATUS=0 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_READY,
SUM(CASE WHEN STATUS=1 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_SENT,
SUM(CASE WHEN STATUS=2 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_RUNNING,
SUM(CASE WHEN STATUS=3 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_FINISHED,
SUM(CASE WHEN STATUS=4 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_CANCELLED,
SUM(CASE WHEN STATUS=5 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_DISCARDED,
SUM(CASE WHEN STATUS=6 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_DONE,
SUM(CASE WHEN STATUS=7 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_FAILED,
SUM(CASE WHEN STATUS=8 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_FATAL,
SUM(CASE WHEN STATUS=9 THEN DEF_MAX_EVENTID-DEF_MIN_EVENTID+1 ELSE 0 END) AS ESEVENTS_MERGED 
FROM 
doma_pandabigmon.PANDAMON_JOBSPAGE t1,
doma_panda.JEDI_EVENTS ev 
WHERE  
t1.JEDITASKID = ev.JEDITASKID 
AND t1.PANDAID = ev.PANDAID
GROUP BY t1.JEDITASKID, t1.PANDAID;

ALTER VIEW jedi_events_grouped OWNER TO panda;
CREATE OR REPLACE VIEW sessionanalysis2 (id, remote, url, qtime, is_new_session) AS SELECT ID, REMOTE, URL, QTIME,
  CASE WHEN EXTRACT(minute FROM QTIME-LASTEVENT) >= 30
         OR coalesce(LASTEVENT::text, '') = ''
       THEN 1 ELSE 0 END AS is_new_session
  FROM (
      SELECT ID, REMOTE, URL, QTIME, LAG(QTIME,1) OVER (PARTITION BY REMOTE ORDER BY QTIME) AS LASTEVENT FROM doma_pandabigmon.REQUEST_STATS t1 WHERE (REMOTE!='188.184.185.129' OR REMOTE!='128.142.142.134') AND (SERVER='aipanda053' OR SERVER='aipanda054' OR SERVER='aipanda056' or SERVER='aipanda057' or SERVER='aipanda058') AND ( EXTRACT(DAY FROM ((CURRENT_TIMESTAMP(0) AT TIME ZONE 'UTC')-t1.QTIME))  < 32)
       )lastt;

ALTER VIEW sessionanalysis2 OWNER TO panda;
CREATE OR REPLACE VIEW sessionanalysis1 (id, remote, url, qtime, global_session_id, user_session_id) AS SELECT ID, REMOTE, URL, QTIME,
       SUM(is_new_session) OVER (ORDER BY REMOTE, QTIME) AS global_session_id,
       SUM(is_new_session) OVER (PARTITION BY REMOTE ORDER BY QTIME) AS user_session_id
  FROM (
SELECT ID, REMOTE, URL, QTIME,
  CASE WHEN EXTRACT(minute FROM QTIME-LASTEVENT) >= 30
         OR coalesce(LASTEVENT::text, '') = ''
       THEN 1 ELSE 0 END AS is_new_session
  FROM (
      SELECT ID, REMOTE, URL, QTIME, LAG(QTIME,1) OVER (PARTITION BY REMOTE ORDER BY QTIME) AS LASTEVENT FROM doma_pandabigmon.REQUEST_STATS t1 WHERE (REMOTE!='188.184.185.129' OR REMOTE!='128.142.142.134') AND (SERVER='aipanda053' OR SERVER='aipanda054' OR SERVER='aipanda056' or SERVER='aipanda057' or SERVER='aipanda058') AND ( EXTRACT(DAY FROM ((CURRENT_TIMESTAMP(0) AT TIME ZONE 'UTC')-t1.QTIME))  < 32)
       )lastt
) finall;

ALTER VIEW sessionanalysis1 OWNER TO panda;

