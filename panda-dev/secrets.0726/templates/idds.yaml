{{- if .Values.idds.enabled }}

{{- $client_vos := list -}}
{{- range $client := .Values.auth.oidc.clients -}}
{{- $client_vos = append $client_vos $client.name -}}
{{- end }}

# iDDS configuration
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.idds.name }}-db-envs
type: Opaque
stringData:
  POSTGRES_DB: "{{ .Values.idds.database.name }}"
  POSTGRES_USER: "{{ .Values.idds.database.user }}"
  POSTGRES_PASSWORD: "{{ .Values.idds.database.password }}"
  POSTGRES_SCHEMA: "{{ .Values.idds.database.schema }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.idds.name }}-envs
type: Opaque
stringData:
  PANDA_AUTH_ID_TOKEN: "{{ .Values.auth.authIdToken }}"
  PANDA_AUTH_VO: "{{ .Values.auth.authVO }}"
  PANDA_AUTH: "{{ .Values.auth.auth }}"

  PANDA_BEHIND_REAL_LB: "1"
  PANDA_MONITOR_URL: "{{ .Values.panda.monitorURL}}"
  PANDA_URL: "{{ .Values.panda.url}}"
  PANDA_URL_SSL: "{{ .Values.panda.urlSSL}}"
  PANDACACHE_URL: "{{ .Values.panda.cacheURL}}"
  PANDA_VERIFY_HOST: "{{ .Values.panda.verifyHost}}"
  PANDA_CONFIG_ROOT: "{{ .Values.panda.configRoot}}"

  IDDS_DATABASE_NAME: "{{ .Values.idds.database.name}}"
  IDDS_DATABASE_USER: "{{ .Values.idds.database.user}}"
  IDDS_DATABASE_PASSWORD: "{{ .Values.idds.database.password}}"
  IDDS_DATABASE_SCHEMA: "{{ .Values.idds.database.schema}}"
  IDDS_DATABASE_HOST: "{{ .Values.idds.database.host}}"

  IDDS_CONDUCTOR_BROKERS: "{{ join "," .Values.msgsvc.serverList }}"
  IDDS_CONDUCTOR_PORT: "{{default "61613" .Values.msgsvc.port }}"
  IDDS_CONDUCTOR_DESTINATION: "/queue/idds_panda"
  IDDS_CONDUCTOR_USERNAME: "idds"
  IDDS_CONDUCTOR_PASSWORD: "{{.Values.msgsvc.basePasswd}}_idds"

  IDDS_SERVER: "{{ .Values.idds.restHost }}:{{ .Values.idds.restPort  }}"


---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.idds.name }}-auth
type: Opaque
stringData:
  "auth.cfg": |-
     {"common":
         {"allow_vos": {{ join "," $client_vos | quote}}
         },
      {{- range $client := .Values.auth.oidc.clients }}
      {{$client.name | quote }}{{":"}}
        {{- $.Files.Get "files/panda_auths/auth_config.json.template" | replace "ID" $client.client_id | replace "SECRET" $client.client_secret | replace "URL" $.Values.auth.oidc.config_url | replace "AUDIENCE" $.Values.auth.oidc.audience  | replace "VO" $client.name }}
        {{ "," }}
      {{- end }}
      "test_vo": {"a": "b"}
     }
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.idds.name }}-certs
type: Opaque
stringData:
  {{- range $path, $_ := .Files.Glob "files/idds_certs/**.pem" }}
  {{ base $path }}: |-
    {{ $.Files.Get $path | b64enc }}
  {{- end }}

{{- end }}
